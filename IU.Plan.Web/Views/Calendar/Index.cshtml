@model CalendarViewModel
@using System.Web.UI.WebControls
@using IU.Plan.Web.Models
@using IU.Plan.Web.Extensions;

@{
    ViewBag.Title = "Calendar";

    var dayCounter = 1;
}

@helper PrintEvents(int dayCounter)
{
    var currDay = new DateTime(Model.BeginOfPeriod.Year, Model.BeginOfPeriod.Month, dayCounter);
    var events = Model.Events.Where(evnt => evnt.StartDateTime.Value.Day == currDay.Day);
    foreach (var evt in events)
    {
        if (evt != null)
        {
            <div>
                @Html.ActionLink(evt.Title, "Details", "Event", new { uid = evt.Guid }, null)

                <button onclick="getView('@evt.Guid')">click</button>
            </div>
        }
    }
}

<script type="text/javascript">
    function getView(uid) {
        console.log(uid);
        $.ajax({
            url: '/Event/View?uid=' + uid,
            success: function (data) {
                $('#MiniDetailsResult').html(data);
                console.log(data);
            }
        });
    }
</script>

<h2>Calendar</h2>

<ul>
    @foreach (var evt in Model.Events)
    {
        <li>
            @evt
        </li>
    }
</ul>

<div>
    @{
        var prevPeriod = Model.BeginOfPeriod.AddMonths(-1);
        var nextPeriod = Model.BeginOfPeriod.AddMonths(1);
    }
    <a href="/Calendar/Index/@prevPeriod.Year/@prevPeriod.Month">&larr;@prevPeriod.Month.ToString(), @prevPeriod.Year</a><br />
    <a href="/Calendar/Index/@nextPeriod.Year/@nextPeriod.Month">&nbsp;&nbsp;@nextPeriod.Month.ToString(), @nextPeriod.Year&rarr;</a>
</div>

<div class="table-responsive">

    <table class="table table-bordered">
        <tr>
            <th>понедельник</th>
            <th>вторник</th>
            <th>среда</th>
            <th>четверг</th>
            <th>пятница</th>
            <th>суббота</th>
            <th>воскресенье</th>
        </tr>
        @for (int i = 0; i < Model.RowCount; i++)
        {
            <tr>
                @for (int j = 0; j < Model.ColCount; j++)
                {
                    if (dayCounter <= Model.EndOfPeriod.Day)
                    {
                        var currDay = new DateTime(Model.BeginOfPeriod.Year, Model.BeginOfPeriod.Month, dayCounter);

                        if (currDay.DayOfWeek.ToInt() == j)
                        {
                            var tdClass = currDay == DateTime.Now.Date ? "bg-info" : "";
                            <td class=@(tdClass)>
                                @((dayCounter <= Model.EndOfPeriod.Day) ? $"{dayCounter}" : "")
                                @PrintEvents(dayCounter++)
                            </td>
                            continue;
                        }
                    }

                    <td></td>
                }
            </tr>
        }
    </table>

</div>

<div id="MiniDetailsResult">

</div>

@ViewBag.Browser