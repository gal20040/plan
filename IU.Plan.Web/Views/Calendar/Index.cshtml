@model CalendarViewModel
@using IU.Plan.Web.Models
@using IU.Plan.Web.Extensions;

@{
    ViewBag.Title = "Calendar";

    var dayCounter = 1;
}

<style>
    .overtext {
        text-overflow: ellipsis;
        overflow: hidden;
        max-width: 80px;
    }
</style>

@helper PrintEvents(int dayCounter)
{
    var currDay = new DateTime(Model.BeginOfPeriod.Year, Model.BeginOfPeriod.Month, dayCounter);
    var events = Model.Events.Where(evnt => evnt.StartDateTime.Value.Day == currDay.Day);
    <div>
        @foreach (var evt in events)
        {
            if (evt != null)
            {
                <div>
                    <a href="#" class="btn btn-primary btn-xs overtext" title="@evt.Title" onclick="getDetails('@evt.Guid')">
                        @evt.Title
                    </a>
                </div>
            }
        }
    </div>
}

<script type="text/javascript">
    function getDetails(uid) {
        //console.log(uid);
        $.ajax({
            url: '/Event/MiniDetails?uid=' + uid,
            success: function (data) {
                $('#MiniDetailsResult').html(data);

                $("#MiniDetailsResult").dialog({
                    width: 'auto',
                    modal: true,
                    buttons: {
                        "Удалить": function () {
                            openDeletePopup(uid);
                        },
                        "Редактировать": function () {
                            openEditPopup(uid);
                        },
                        Ok: function () {
                            $(this).dialog("close");
                        }
                    }
                });
                //console.log(data);
            }
        });
    }

    function saveEvent() {
        $.ajax({
            url: '/Event/Save',
            type: 'post',
            data: $('form#eventSaveForm').serialize(),
            success: function (data) {
                $('#EditPopup').html(data);
            }
        });

    }

    function openEditPopup(uid) {
        $.ajax({
            url: '/Event/Edit?uid=' + uid,
            success: function (data) {
                $('#EditPopup').html(data);
                $("#EditPopup").dialog({
                    modal: true,
                    width: 'auto',
                    buttons: {
                        "Сохранить": function () {
                            saveEvent();
                            //$(this).dialog("close");
                        },
                        Cancel: function () {
                            $(this).dialog("close");
                        }
                    },
                    close: function () {
                        window.location.reload();
                        //form[0].reset();
                    }
                });
            }
        });
    }

    function openDeletePopup(uid) {
        $.ajax({
            url: '/Event/Delete?uid=' + uid,
            method: 'POST',
            success: function (data) {
                $('#DeletePopup').html(data);
                $("#DeletePopup").dialog({
                    modal: true,
                    width: 'auto',
                    close: function () {
                        window.location.reload();
                        //form[0].reset();
                    }
                });
            }
        });
    }

</script>

@{
    var prevPeriod = Model.BeginOfPeriod.AddMonths(-1);
    var nextPeriod = Model.BeginOfPeriod.AddMonths(1);
    var today = DateTime.Today;
}

<h2>Календарь для @Model.BeginOfPeriod.ToString("MMMM"), @Model.BeginOfPeriod.Year</h2>

<div>
    <div>
        <nav aria-label="...">
            <ul class="pager">
                <li class="previous"><a href="@Url.Action("Index", new { year = prevPeriod.Year, month = prevPeriod.Month })"><span aria-hidden="true">&larr;</span> Туда</a></li>
                <li class="today"><a href="@Url.Action("Index", new { year = today.Year, month = today.Month })">Сегодня</a></li>
                <li class="next"><a href="@Url.Action("Index", new { year = nextPeriod.Year, month = nextPeriod.Month })">Сюда <span aria-hidden="true">&rarr;</span></a></li>
            </ul>
        </nav>
    </div>
</div>

<div>
    <div>
        <table class="table table-hover table-bordered">
            <thead>
                <tr>
                    <th style="width:14%">ПН</th>
                    <th style="width:14%">ВТ</th>
                    <th style="width:14%">СР</th>
                    <th style="width:14%">ЧТ</th>
                    <th style="width:14%">ПТ</th>
                    <th style="width:15%">СБ</th>
                    <th style="width:15%">ВС</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.RowCount; i++)
                {
                    <tr>
                        @for (int j = 0; j < Model.ColCount; j++)
                        {
                            if (dayCounter <= Model.EndOfPeriod.Day)
                            {
                                var currDay = new DateTime(Model.BeginOfPeriod.Year, Model.BeginOfPeriod.Month, dayCounter);

                                if (currDay.DayOfWeek.ToInt() == j)
                                {
                                    var tdClass = currDay == DateTime.Now.Date ? "bg-info" : "";
                                    <td class=@(tdClass)>
                                        @((dayCounter <= Model.EndOfPeriod.Day) ? $"{dayCounter}" : "")
                                        @PrintEvents(dayCounter++)
                                    </td>
                                    continue;
                                }
                            }

                            <td></td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div id="MiniDetailsResult"></div>
<div id="EditPopup"></div>
<div id="DeletePopup"></div>